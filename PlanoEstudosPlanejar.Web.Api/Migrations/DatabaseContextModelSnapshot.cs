// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanoEstudosPlanejar.Web.Api.Models.Entities;

#nullable disable

namespace PlanoEstudosPlanejar.Web.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.Arquivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanoEstudoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanoEstudoId");

                    b.ToTable("Arquivos");
                });

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.Materias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanoEstudoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanoEstudoId");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.PlanoEstudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HorasPorDia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PlanoEstudos");
                });

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Eamil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.Arquivos", b =>
                {
                    b.HasOne("PlanoEstudosPlanejar.Web.Api.Models.Entities.PlanoEstudo", "PlanoEstudo")
                        .WithMany("Arquivos")
                        .HasForeignKey("PlanoEstudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanoEstudo");
                });

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.Materias", b =>
                {
                    b.HasOne("PlanoEstudosPlanejar.Web.Api.Models.Entities.PlanoEstudo", "PlanoEstudo")
                        .WithMany("Materias")
                        .HasForeignKey("PlanoEstudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanoEstudo");
                });

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.PlanoEstudo", b =>
                {
                    b.HasOne("PlanoEstudosPlanejar.Web.Api.Models.Entities.Usuario", "Usuario")
                        .WithMany("PlanoEstudos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.PlanoEstudo", b =>
                {
                    b.Navigation("Arquivos");

                    b.Navigation("Materias");
                });

            modelBuilder.Entity("PlanoEstudosPlanejar.Web.Api.Models.Entities.Usuario", b =>
                {
                    b.Navigation("PlanoEstudos");
                });
#pragma warning restore 612, 618
        }
    }
}
